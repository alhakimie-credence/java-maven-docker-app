name: Java Maven Docker CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: mvn -B clean compile
    
    - name: Run tests
      run: mvn -B test
    
    - name: Package application
      run: mvn -B package
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: java-maven-app:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      
    - name: Run Docker container
      run: |
        docker run -d -p 9080:8080 --name test-container java-maven-app:${{ github.sha }}
        docker ps
        
    - name: Verify container is running
      run: |
        sleep 10
        docker ps | grep test-container
        if [ $? -ne 0 ]; then
          echo "Container is not running!"
          docker logs test-container
          exit 1
        fi
        echo "Container is running successfully"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: java-maven-app
        path: target/java-maven-app-*-SNAPSHOT.jar
        
    - name: Clean up
      run: docker rm -f test-container || true
